// <auto-generated />
using System;
using Library.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Library.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210101072626_UpdatingUsers")]
    partial class UpdatingUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Library.Data.AppUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "4D69ED13-08F0-46DE-DE69-5FFE74A43A37",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "daf3a6b8-5b5f-4dd0-81f1-ad7810d0edc9",
                            DateOfBirth = new DateTime(1960, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Debra",
                            LastName = "Kristen",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5f5cc147-694d-427f-8739-b0d24f1bcff4",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "EC72E9E5-50EB-8460-4469-A916232838B5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6d0df368-fe74-4521-bfe4-3607b67435e2",
                            DateOfBirth = new DateTime(1964, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Patrick",
                            LastName = "Caleb",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "73143b9c-c183-4fc8-b2fe-d0b44980b059",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "D2D57256-EFC2-3259-D7BB-7A126DDC3CE2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "457c71d2-7fb6-4ca7-badd-ca67a2c80cf5",
                            DateOfBirth = new DateTime(2007, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Penelope",
                            LastName = "Philip",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "79abfea4-d812-4118-90da-f144c1580a4e",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "8A6C8FB7-461F-187B-0B96-E2EFBBF7A8EB",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "037cb4cc-8d32-46ad-b648-ab7dff954c8c",
                            DateOfBirth = new DateTime(1962, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Armand",
                            LastName = "Jack",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "64c51e76-b7f0-45c3-93bd-c5e4f0400c34",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "9CDFB677-9945-9AAB-B988-352A780D5F50",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f71c807c-3587-4c95-a4d0-d427f535b19a",
                            DateOfBirth = new DateTime(2007, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Brittany",
                            LastName = "Elmo",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "941ee3e9-4785-4c99-a122-911e7938d8ee",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "B0268B9E-510C-8DE9-2C11-31B8FC0AE1F2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "59682333-c9f2-4093-8fd4-0d8642865839",
                            DateOfBirth = new DateTime(1970, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Gwendolyn",
                            LastName = "Reese",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fda33e0e-aeec-4833-9b95-661b599b0cf1",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "F89981C5-066C-CE27-7E6D-FBE7C845C60C",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9452d09e-8834-418c-9f51-571652874f9e",
                            DateOfBirth = new DateTime(2001, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Myra",
                            LastName = "Lana",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e5d52d41-44d8-4d23-8c18-9845922f111a",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "C8AB11C9-7812-0753-64CF-46FA919744C0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "62d621a8-0d49-4d8b-930c-9f7f689497e7",
                            DateOfBirth = new DateTime(1972, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Lana",
                            LastName = "Holly",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c0542800-4b23-49e4-86af-cade78c0301a",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "AEE7B39C-0613-3443-BC1C-6911A94B7846",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "41aa2617-9de9-4031-9a86-637b930fae37",
                            DateOfBirth = new DateTime(1965, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Riley",
                            LastName = "Yasir",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e9dd4fe7-b997-4888-81a3-782edd991d5f",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "0D3F221A-ED66-C81D-9C57-5DBE93551E26",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6a0a4935-b695-40f0-8f67-5a8df662aacc",
                            DateOfBirth = new DateTime(1977, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Caldwell",
                            LastName = "Kaitlin",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a34b0290-4d22-4422-90c0-872a828f0273",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "3CC0CC6E-7CD2-BE49-813B-913A94C80FD9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d54424fe-ed7c-4f3a-8e5a-7e1535dfd066",
                            DateOfBirth = new DateTime(1994, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Alfreda",
                            LastName = "Kim",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "707fa098-393d-4869-a2bd-d6dc0362acac",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "B87C5391-D282-961A-AADD-10501EFCA2A8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "47d033f7-3829-49c0-99e0-28f6b154e656",
                            DateOfBirth = new DateTime(2007, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Stephen",
                            LastName = "Amethyst",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5ffc175b-f3ab-4022-a427-f135648267c8",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "1144D05C-F75A-AE5C-B806-0EEE7CF38021",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f97476f8-fa21-4c8b-a602-35f5e2a96d33",
                            DateOfBirth = new DateTime(1965, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Donovan",
                            LastName = "Lacy",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "487db28a-80c8-4b70-930f-0d2124bd10f1",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "5035504A-00BC-450A-49B8-11F9309CE924",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "132c72f5-12a1-4e5e-aa5a-44e30e4ce894",
                            DateOfBirth = new DateTime(1959, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Daphne",
                            LastName = "Plato",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1579d695-7ebb-4311-93ad-edfb454a5034",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "FC00EA26-D0AF-876B-C655-5FB95C1BFBBB",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "76e95924-6aeb-42b7-b911-1733b60738ab",
                            DateOfBirth = new DateTime(2014, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Adena",
                            LastName = "Gray",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ed46bd1b-9435-4d96-af05-98ce4ffb790f",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "A4B20C1F-13BB-F831-EE9A-83C2F5034EC2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "69cbbb93-9a00-4345-814b-4b680c2fa556",
                            DateOfBirth = new DateTime(1984, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Jonas",
                            LastName = "Pascale",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b36d0cc3-2902-48f3-947c-377a1eb54922",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "2BE4CA58-BCB8-CF64-F121-E1BD464A80F2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6508540b-7782-4e3e-b69c-7af5af724f81",
                            DateOfBirth = new DateTime(2007, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Declan",
                            LastName = "Maxwell",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0efeb9a7-2524-424e-87e5-d644c9664e35",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "D364495F-913B-4505-8809-4F709B3A66CF",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d386f618-bcc2-44a2-ab38-c184e32752b8",
                            DateOfBirth = new DateTime(2006, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Daphne",
                            LastName = "Hiroko",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6d3567d7-a533-4c7a-a6ec-b22725472e75",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "7D70D508-C8A4-C522-C6D2-0175D3A963E1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0fab432a-de29-40ac-9981-aa0e78e57140",
                            DateOfBirth = new DateTime(1978, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Imani",
                            LastName = "Melyssa",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a86999f5-8209-4a0b-8782-459c38981205",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "9B2B64D2-A663-906D-88BF-C783B7DFED12",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0c05b3d9-0bac-41e0-ba92-9f43536ca39d",
                            DateOfBirth = new DateTime(1969, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Hayes",
                            LastName = "Linus",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "35a1307c-14df-4b48-bf24-99a1e5a09d95",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "EC5306BA-5307-1D1F-2AB6-72309C38CAF8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "174ba4b5-f822-43df-9fd2-3c136388c31f",
                            DateOfBirth = new DateTime(1997, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Florence",
                            LastName = "Naida",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d93ebe3f-ed55-4117-a2c0-40ea1ee9b9bf",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "333C9736-9F1B-90AB-1A26-C805AF166493",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b006f36c-3a3f-4c49-8c81-c5b9ce98c2d9",
                            DateOfBirth = new DateTime(1997, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Scarlet",
                            LastName = "Cynthia",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9569e175-fb70-417b-af8f-d8977f8011d1",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("Library.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "James",
                            LastName = "Bond"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jackie",
                            LastName = "Chan"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Sylvester",
                            LastName = "Stallone"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Van",
                            LastName = "Damme"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Jet",
                            LastName = "Lee"
                        });
                });

            modelBuilder.Entity("Library.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("BorrowerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BorrowerId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            IsAvailable = true,
                            Title = "Spectre"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            IsAvailable = true,
                            Title = "Casino Royal"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            IsAvailable = true,
                            Title = "007"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 1,
                            IsAvailable = true,
                            Title = "The spy who loved me"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 1,
                            IsAvailable = true,
                            Title = "From russia with love"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 1,
                            IsAvailable = true,
                            Title = "Die another day"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 2,
                            IsAvailable = true,
                            Title = "Rush Hour"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 2,
                            IsAvailable = true,
                            Title = "Police story"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 2,
                            IsAvailable = true,
                            Title = "Who am I?"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 2,
                            IsAvailable = true,
                            Title = "The karate kid"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 2,
                            IsAvailable = true,
                            Title = "Drunken Master"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 3,
                            IsAvailable = true,
                            Title = "Rambo"
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 3,
                            IsAvailable = true,
                            Title = "First Blood"
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 3,
                            IsAvailable = true,
                            Title = "The expendables"
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 3,
                            IsAvailable = true,
                            Title = "Escape plan"
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 3,
                            IsAvailable = true,
                            Title = "Judgment Day"
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 4,
                            IsAvailable = true,
                            Title = "Hard Target"
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 4,
                            IsAvailable = true,
                            Title = "Double Impact"
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 4,
                            IsAvailable = true,
                            Title = "Universal Soldier"
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 4,
                            IsAvailable = true,
                            Title = "Hard Way"
                        },
                        new
                        {
                            Id = 21,
                            AuthorId = 4,
                            IsAvailable = true,
                            Title = "Street Fighter"
                        },
                        new
                        {
                            Id = 22,
                            AuthorId = 4,
                            IsAvailable = true,
                            Title = "Bullet in the head"
                        },
                        new
                        {
                            Id = 23,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "The Black Mask"
                        },
                        new
                        {
                            Id = 24,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "Romeo Must Die"
                        },
                        new
                        {
                            Id = 25,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "Cradle to the grave"
                        },
                        new
                        {
                            Id = 26,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "Once upon a time in China"
                        },
                        new
                        {
                            Id = 27,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "Hero"
                        },
                        new
                        {
                            Id = 28,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "Fearless"
                        },
                        new
                        {
                            Id = 29,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "Fist of legend"
                        },
                        new
                        {
                            Id = 30,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "The one"
                        },
                        new
                        {
                            Id = 31,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "Unleashed"
                        });
                });

            modelBuilder.Entity("Library.Entities.Book", b =>
                {
                    b.HasOne("Library.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Data.AppUsers", "Borrower")
                        .WithMany()
                        .HasForeignKey("BorrowerId");
                });
#pragma warning restore 612, 618
        }
    }
}
