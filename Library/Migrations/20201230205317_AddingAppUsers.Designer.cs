// <auto-generated />
using System;
using Library.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Library.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201230205317_AddingAppUsers")]
    partial class AddingAppUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Library.Data.AppUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "4D69ED13-08F0-46DE-DE69-5FFE74A43A37",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cc1f2bd1-413a-4480-96ff-4f8dab8ee653",
                            DateOfBirth = new DateTime(1960, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Debra",
                            LastName = "Kristen",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4a01b7e9-df4d-4f31-9373-0f065869cc41",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "EC72E9E5-50EB-8460-4469-A916232838B5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e14e410b-2c0b-4110-bf0e-25d6f131483f",
                            DateOfBirth = new DateTime(1964, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Patrick",
                            LastName = "Caleb",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6b55f141-e32a-4fb2-b1f9-b5d86047f6c2",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "D2D57256-EFC2-3259-D7BB-7A126DDC3CE2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "facf94c6-3d5b-4642-9794-d7659429a0e5",
                            DateOfBirth = new DateTime(2007, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Penelope",
                            LastName = "Philip",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "833d7801-3eb9-45d6-b32b-5a190e66876b",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "8A6C8FB7-461F-187B-0B96-E2EFBBF7A8EB",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4ac1ff60-3d04-449c-a445-57a7a4174b1f",
                            DateOfBirth = new DateTime(1962, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Armand",
                            LastName = "Jack",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7dd3bed1-d2bf-4d66-8aa8-011343bbd5cb",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "9CDFB677-9945-9AAB-B988-352A780D5F50",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8cad547a-1c14-4dd5-9b14-7a7b4a4ff166",
                            DateOfBirth = new DateTime(2007, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Brittany",
                            LastName = "Elmo",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "33967473-2c89-4c82-84bd-8a3d8d06b3f4",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "B0268B9E-510C-8DE9-2C11-31B8FC0AE1F2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "49a135dc-066b-42c2-af59-3c09aea8d99c",
                            DateOfBirth = new DateTime(1970, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Gwendolyn",
                            LastName = "Reese",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "353806c4-0922-48a2-88db-4e64bafae8c6",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "F89981C5-066C-CE27-7E6D-FBE7C845C60C",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a6a5d87e-43a1-404a-80a5-e6f7e48d72e1",
                            DateOfBirth = new DateTime(2001, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Myra",
                            LastName = "Lana",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7834a639-1ac1-4c22-a3a3-f3e013176172",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "C8AB11C9-7812-0753-64CF-46FA919744C0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "183e3d97-1a99-4db2-8ddb-cd0304bf65f3",
                            DateOfBirth = new DateTime(1972, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Lana",
                            LastName = "Holly",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0955c0fb-126e-483a-9178-28fe6e9216b6",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "AEE7B39C-0613-3443-BC1C-6911A94B7846",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5e25e3a1-96a0-4962-8174-53181cac5719",
                            DateOfBirth = new DateTime(1965, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Riley",
                            LastName = "Yasir",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "db267738-404d-4b77-a314-ec7457eedc06",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "0D3F221A-ED66-C81D-9C57-5DBE93551E26",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "42e29b86-e642-4b34-b666-b724866a23ec",
                            DateOfBirth = new DateTime(1977, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Caldwell",
                            LastName = "Kaitlin",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d586aeaf-5322-441e-9df8-269c31ff0020",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "3CC0CC6E-7CD2-BE49-813B-913A94C80FD9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3ccf7eb4-431b-4b7f-9e9a-b2157489e311",
                            DateOfBirth = new DateTime(1994, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Alfreda",
                            LastName = "Kim",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ecfce5a0-a3c4-4886-8624-1fed61690e72",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "B87C5391-D282-961A-AADD-10501EFCA2A8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e707f0e3-7b16-483f-b4a6-b05db31d9232",
                            DateOfBirth = new DateTime(2007, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Stephen",
                            LastName = "Amethyst",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8a1beadd-f544-43c8-8e64-3bbf3bdda32b",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "1144D05C-F75A-AE5C-B806-0EEE7CF38021",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8bbd6ad0-5b3c-4f7d-ba9f-3647977a1951",
                            DateOfBirth = new DateTime(1965, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Donovan",
                            LastName = "Lacy",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c36fc737-c028-44ba-b67f-ef551fa196be",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "5035504A-00BC-450A-49B8-11F9309CE924",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3f1ea825-9f77-479e-a757-fb9926413710",
                            DateOfBirth = new DateTime(1959, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Daphne",
                            LastName = "Plato",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3dc7fbae-f17d-4b32-bb17-13c76530de78",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "FC00EA26-D0AF-876B-C655-5FB95C1BFBBB",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3c77e58f-5d4a-4be0-a459-2b69316fbc19",
                            DateOfBirth = new DateTime(2014, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Adena",
                            LastName = "Gray",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "82c85bd7-49c2-4a8e-aff5-1d34d8033d0c",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "A4B20C1F-13BB-F831-EE9A-83C2F5034EC2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "84e2f85e-8c8a-4a67-bbae-11e9c2027057",
                            DateOfBirth = new DateTime(1984, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Jonas",
                            LastName = "Pascale",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e468085a-5597-4321-b3e5-84e54ba0ae5a",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "2BE4CA58-BCB8-CF64-F121-E1BD464A80F2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b2ec34de-4b9b-46d6-a351-877705eb1576",
                            DateOfBirth = new DateTime(2007, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Declan",
                            LastName = "Maxwell",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cb174b1f-76a1-4032-bbb0-d783fa8329bc",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "D364495F-913B-4505-8809-4F709B3A66CF",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3d0320c8-0876-4f22-8ef1-1d0aa881d9c3",
                            DateOfBirth = new DateTime(2006, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Daphne",
                            LastName = "Hiroko",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "167de7ab-63d9-4096-916a-1052d72c03e6",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "7D70D508-C8A4-C522-C6D2-0175D3A963E1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ea08fb53-8349-446a-88fa-9ea5424b58bc",
                            DateOfBirth = new DateTime(1978, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Imani",
                            LastName = "Melyssa",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2054797f-b2a0-43d5-a4fe-c0ab18677b02",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "9B2B64D2-A663-906D-88BF-C783B7DFED12",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "22e19453-4f1f-47b1-8773-0ad1d46a57d4",
                            DateOfBirth = new DateTime(1969, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Hayes",
                            LastName = "Linus",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "43bfdc17-4f27-4b04-bc75-125f9f1c1312",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "EC5306BA-5307-1D1F-2AB6-72309C38CAF8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "56144cee-3c5f-4689-a437-27a1b40874e5",
                            DateOfBirth = new DateTime(1997, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Florence",
                            LastName = "Naida",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "013fcf0a-0eb0-4e7d-ae74-db3aa6a6cdec",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "333C9736-9F1B-90AB-1A26-C805AF166493",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7e7e6d74-c53b-4b55-825d-aa0f6968b50b",
                            DateOfBirth = new DateTime(1997, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Scarlet",
                            LastName = "Cynthia",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1df21719-86ec-45be-8fb1-69d058c4fe88",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("Library.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "James",
                            LastName = "Bond"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jackie",
                            LastName = "Chan"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Sylvester",
                            LastName = "Stallone"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Van",
                            LastName = "Damme"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Jet",
                            LastName = "Lee"
                        });
                });

            modelBuilder.Entity("Library.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Title = "Spectre"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Title = "Casino Royal"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            Title = "007"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 1,
                            Title = "The spy who loved me"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 1,
                            Title = "From russia with love"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 1,
                            Title = "Die another day"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 2,
                            Title = "Rush Hour"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 2,
                            Title = "Police story"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 2,
                            Title = "Who am I?"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 2,
                            Title = "The karate kid"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 2,
                            Title = "Drunken Master"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 3,
                            Title = "Rambo"
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 3,
                            Title = "First Blood"
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 3,
                            Title = "The expendables"
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 3,
                            Title = "Escape plan"
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 3,
                            Title = "Judgment Day"
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 4,
                            Title = "Hard Target"
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 4,
                            Title = "Double Impact"
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 4,
                            Title = "Universal Soldier"
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 4,
                            Title = "Hard Way"
                        },
                        new
                        {
                            Id = 21,
                            AuthorId = 4,
                            Title = "Street Fighter"
                        },
                        new
                        {
                            Id = 22,
                            AuthorId = 4,
                            Title = "Bullet in the head"
                        },
                        new
                        {
                            Id = 23,
                            AuthorId = 5,
                            Title = "The Black Mask"
                        },
                        new
                        {
                            Id = 24,
                            AuthorId = 5,
                            Title = "Romeo Must Die"
                        },
                        new
                        {
                            Id = 25,
                            AuthorId = 5,
                            Title = "Cradle to the grave"
                        },
                        new
                        {
                            Id = 26,
                            AuthorId = 5,
                            Title = "Once upon a time in China"
                        },
                        new
                        {
                            Id = 27,
                            AuthorId = 5,
                            Title = "Hero"
                        },
                        new
                        {
                            Id = 28,
                            AuthorId = 5,
                            Title = "Fearless"
                        },
                        new
                        {
                            Id = 29,
                            AuthorId = 5,
                            Title = "Fist of legend"
                        },
                        new
                        {
                            Id = 30,
                            AuthorId = 5,
                            Title = "The one"
                        },
                        new
                        {
                            Id = 31,
                            AuthorId = 5,
                            Title = "Unleashed"
                        });
                });

            modelBuilder.Entity("Library.Entities.Book", b =>
                {
                    b.HasOne("Library.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
