// <auto-generated />
using System;
using Library.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Library.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201231062026_ChangingBook")]
    partial class ChangingBook
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Library.Data.AppUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "4D69ED13-08F0-46DE-DE69-5FFE74A43A37",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "38a17945-7b40-4a70-9f74-50948f438a4d",
                            DateOfBirth = new DateTime(1960, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Debra",
                            LastName = "Kristen",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "82883759-34fb-49f9-b48e-d6d16a24193b",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "EC72E9E5-50EB-8460-4469-A916232838B5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b8c3ed98-19d7-461b-972c-a5dc6027e0a1",
                            DateOfBirth = new DateTime(1964, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Patrick",
                            LastName = "Caleb",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d58e316a-24cb-4e4a-a941-1487b5c44696",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "D2D57256-EFC2-3259-D7BB-7A126DDC3CE2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "42913f6f-aa2d-4fb3-8af6-16606fbf57d7",
                            DateOfBirth = new DateTime(2007, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Penelope",
                            LastName = "Philip",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ca969b45-1740-457a-93cc-6f4a9c5fc4dc",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "8A6C8FB7-461F-187B-0B96-E2EFBBF7A8EB",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "67d2344e-da5a-4c57-9cd4-adc137f6da76",
                            DateOfBirth = new DateTime(1962, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Armand",
                            LastName = "Jack",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fb9bda64-41a5-4cfd-aa9f-d0fced27c2df",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "9CDFB677-9945-9AAB-B988-352A780D5F50",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8a88fda6-c4b0-404c-836a-c15e56c070b2",
                            DateOfBirth = new DateTime(2007, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Brittany",
                            LastName = "Elmo",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "240d1db7-c7b7-4c99-96cb-da286cf26a64",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "B0268B9E-510C-8DE9-2C11-31B8FC0AE1F2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "998a685c-b50d-4a72-9e50-e0cc096d8111",
                            DateOfBirth = new DateTime(1970, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Gwendolyn",
                            LastName = "Reese",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2094d742-d636-43fd-804c-33f773676b01",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "F89981C5-066C-CE27-7E6D-FBE7C845C60C",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "94c77761-c838-48d9-8833-8ce28977cc9f",
                            DateOfBirth = new DateTime(2001, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Myra",
                            LastName = "Lana",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a8803687-acbb-4c2a-ae00-49be37339c51",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "C8AB11C9-7812-0753-64CF-46FA919744C0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0d9f8bd2-001d-49b5-a47f-405e181bdd14",
                            DateOfBirth = new DateTime(1972, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Lana",
                            LastName = "Holly",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "560ffd12-bb18-49d7-9376-333ca4c70c61",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "AEE7B39C-0613-3443-BC1C-6911A94B7846",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bdb5ba6b-7dff-4adf-8a59-7361d3c28fcb",
                            DateOfBirth = new DateTime(1965, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Riley",
                            LastName = "Yasir",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7d1b811b-7ae2-40ff-9176-d7b1056cef92",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "0D3F221A-ED66-C81D-9C57-5DBE93551E26",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e464d603-6f6f-4203-a069-69ddeb827f79",
                            DateOfBirth = new DateTime(1977, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Caldwell",
                            LastName = "Kaitlin",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6f0ca5c6-ad06-4045-adbf-29983d0750ab",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "3CC0CC6E-7CD2-BE49-813B-913A94C80FD9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bd6b38f7-ce11-4964-90fc-0f2037a79541",
                            DateOfBirth = new DateTime(1994, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Alfreda",
                            LastName = "Kim",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cfc70297-6c69-4392-be80-a220c02d0921",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "B87C5391-D282-961A-AADD-10501EFCA2A8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3df10cbe-65bd-4f02-8802-3489e523a1ef",
                            DateOfBirth = new DateTime(2007, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Stephen",
                            LastName = "Amethyst",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7c03dd6b-5f9e-491a-8149-79f86c62671b",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "1144D05C-F75A-AE5C-B806-0EEE7CF38021",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7889d4c6-b2e5-4b2f-8c26-6b1f61a9d1f2",
                            DateOfBirth = new DateTime(1965, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Donovan",
                            LastName = "Lacy",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7e08c141-2e92-4bf4-bc02-05708f4ad4bd",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "5035504A-00BC-450A-49B8-11F9309CE924",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "33556173-87f3-4fe1-98b1-cb869c83f805",
                            DateOfBirth = new DateTime(1959, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Daphne",
                            LastName = "Plato",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3325cc97-1fc8-4ca3-ac20-aac6342249fd",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "FC00EA26-D0AF-876B-C655-5FB95C1BFBBB",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d29ef4db-70cb-4edb-9864-43d4199f13e1",
                            DateOfBirth = new DateTime(2014, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Adena",
                            LastName = "Gray",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "11b4fdef-7d2a-4c02-bb8e-ff7be1516863",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "A4B20C1F-13BB-F831-EE9A-83C2F5034EC2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "129954d1-e2c1-41cf-9b00-d0de5675edc8",
                            DateOfBirth = new DateTime(1984, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Jonas",
                            LastName = "Pascale",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a47b9666-9170-4ce9-9c53-a344a41cfb87",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "2BE4CA58-BCB8-CF64-F121-E1BD464A80F2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "04872dd3-ba86-4fb8-85f6-9d07cdde2d27",
                            DateOfBirth = new DateTime(2007, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Declan",
                            LastName = "Maxwell",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "239ac1f1-e29a-42af-a005-8dd061f888ae",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "D364495F-913B-4505-8809-4F709B3A66CF",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d76b036d-597d-42a7-b023-c8664c6df124",
                            DateOfBirth = new DateTime(2006, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Daphne",
                            LastName = "Hiroko",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d33c1217-1099-470e-97dd-a575a4afb4c6",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "7D70D508-C8A4-C522-C6D2-0175D3A963E1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "92e605f6-db0a-4764-8564-7a9ceaaae4f7",
                            DateOfBirth = new DateTime(1978, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Imani",
                            LastName = "Melyssa",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2c2b8823-dbfe-4994-b411-e9db810f5453",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "9B2B64D2-A663-906D-88BF-C783B7DFED12",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a5813355-2c5f-445c-acaa-ffec97c08fb9",
                            DateOfBirth = new DateTime(1969, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Hayes",
                            LastName = "Linus",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "995ce533-a550-4527-9e33-b16c39dbae4a",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "EC5306BA-5307-1D1F-2AB6-72309C38CAF8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "63c57dce-2575-42ce-b429-e3d0863dec67",
                            DateOfBirth = new DateTime(1997, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Florence",
                            LastName = "Naida",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3ef19bd2-7f40-4ff9-aa44-4d0c43d9becd",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "333C9736-9F1B-90AB-1A26-C805AF166493",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7183fa3d-1ec1-400d-8d65-4fce7b7cfdf1",
                            DateOfBirth = new DateTime(1997, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Scarlet",
                            LastName = "Cynthia",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "59c05c30-f250-4fdd-9c62-39faf05c8cca",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("Library.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "James",
                            LastName = "Bond"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jackie",
                            LastName = "Chan"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Sylvester",
                            LastName = "Stallone"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Van",
                            LastName = "Damme"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Jet",
                            LastName = "Lee"
                        });
                });

            modelBuilder.Entity("Library.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("BorrowerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BorrowerId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            IsAvailable = true,
                            Title = "Spectre"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            IsAvailable = true,
                            Title = "Casino Royal"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            IsAvailable = true,
                            Title = "007"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 1,
                            IsAvailable = true,
                            Title = "The spy who loved me"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 1,
                            IsAvailable = true,
                            Title = "From russia with love"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 1,
                            IsAvailable = true,
                            Title = "Die another day"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 2,
                            IsAvailable = true,
                            Title = "Rush Hour"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 2,
                            IsAvailable = true,
                            Title = "Police story"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 2,
                            IsAvailable = true,
                            Title = "Who am I?"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 2,
                            IsAvailable = true,
                            Title = "The karate kid"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 2,
                            IsAvailable = true,
                            Title = "Drunken Master"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 3,
                            IsAvailable = true,
                            Title = "Rambo"
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 3,
                            IsAvailable = true,
                            Title = "First Blood"
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 3,
                            IsAvailable = true,
                            Title = "The expendables"
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 3,
                            IsAvailable = true,
                            Title = "Escape plan"
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 3,
                            IsAvailable = true,
                            Title = "Judgment Day"
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 4,
                            IsAvailable = true,
                            Title = "Hard Target"
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 4,
                            IsAvailable = true,
                            Title = "Double Impact"
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 4,
                            IsAvailable = true,
                            Title = "Universal Soldier"
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 4,
                            IsAvailable = true,
                            Title = "Hard Way"
                        },
                        new
                        {
                            Id = 21,
                            AuthorId = 4,
                            IsAvailable = true,
                            Title = "Street Fighter"
                        },
                        new
                        {
                            Id = 22,
                            AuthorId = 4,
                            IsAvailable = true,
                            Title = "Bullet in the head"
                        },
                        new
                        {
                            Id = 23,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "The Black Mask"
                        },
                        new
                        {
                            Id = 24,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "Romeo Must Die"
                        },
                        new
                        {
                            Id = 25,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "Cradle to the grave"
                        },
                        new
                        {
                            Id = 26,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "Once upon a time in China"
                        },
                        new
                        {
                            Id = 27,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "Hero"
                        },
                        new
                        {
                            Id = 28,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "Fearless"
                        },
                        new
                        {
                            Id = 29,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "Fist of legend"
                        },
                        new
                        {
                            Id = 30,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "The one"
                        },
                        new
                        {
                            Id = 31,
                            AuthorId = 5,
                            IsAvailable = true,
                            Title = "Unleashed"
                        });
                });

            modelBuilder.Entity("Library.Entities.Book", b =>
                {
                    b.HasOne("Library.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Data.AppUsers", "Borrower")
                        .WithMany()
                        .HasForeignKey("BorrowerId");
                });
#pragma warning restore 612, 618
        }
    }
}
